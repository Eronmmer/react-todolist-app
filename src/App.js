import React, { Component } from "react";
import uuidv4 from "uuid/v4";

import Items from "./Components/Items";
import Header from "./Components/Header";
import AddItem from "./Components/AddItem";

import "./App.css";

export default class App extends Component {
  state = {
    todos: []
  };

  componentDidMount() {
    if (localStorage.getItem("todoList") === null) {
      localStorage.setItem("todoList", "[]");
    } else {
      let todoList = JSON.parse(localStorage.getItem("todoList"));
      this.setState({
        todos: todoList
      });
    }
  }

  markComplete = id => {
    this.setState({
      todos: this.state.todos.map(todo => {
        if (todo.id === id) {
          todo.completed = !todo.completed;
        }
        return todo;
      })
    });
    let todoList = JSON.parse(localStorage.getItem("todoList"));
    todoList = todoList.map(todo => {
      if (todo.id === id) {
        todo.completed = !todo.completed;
      }
      return todo;
    });
    localStorage.setItem("todoList", JSON.stringify(todoList));
  };

  removeItem = id => {
    this.setState({ todos: this.state.todos.filter(todo => todo.id !== id) });
    let todoList = JSON.parse(localStorage.getItem("todoList"));
    todoList = todoList.filter(todo => todo.id !== id);
    localStorage.setItem("todoList", JSON.stringify(todoList));
  };

  addItem = item => {
    this.setState({
      todos: [
        ...this.state.todos,
        {
          id: uuidv4(),
          value: item,
          completed: false
        }
      ]
    });
  };

  updateStorage = () => {
    // setTimeout is used here because updateStorage() and addItem() are meant to fire off immediately the form is submitted and since unique ids are generated by uuid, we need to pass these ids also to localStorage and both functions mentioned above cant occur simultaneously 
    setTimeout(() => {
      let todoList = this.state.todos;
      localStorage.setItem("todoList", JSON.stringify(todoList));
    }, 300);
  };

  render() {
    return (
      <React.Fragment>
        <Header />
        <AddItem addItem={this.addItem} updateStorage={this.updateStorage} />
        <div className="todo-list">
          <h1 className="remainder">
            Tasks Left:{" "}
            {this.state.todos.filter(todo => todo.completed === false).length}
          </h1>
          <Items
            todos={this.state.todos}
            markComplete={this.markComplete}
            removeItem={this.removeItem}
          />
        </div>
      </React.Fragment>
    );
  }
}
